<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="10" total="131" passed="121">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="478281" started-at="2018-12-19T10:48:49Z" finished-at="2018-12-19T10:56:48Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="478281" started-at="2018-12-19T10:48:49Z" finished-at="2018-12-19T10:56:48Z">
      <class name="WittyFeedTestCases.WittyTagstestcasesTest">
        <test-method status="PASS" signature="CheckSearchOption()" name="CheckSearchOption" duration-ms="3756" started-at="2018-12-19T10:56:44Z" finished-at="2018-12-19T10:56:48Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:56:48Z" finished-at="2018-12-19T10:56:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckSearchOption STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyTagstestcasesTest.CheckSearchOption()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckSearchTags()" name="CheckSearchTags" duration-ms="44" started-at="2018-12-19T10:56:48Z" finished-at="2018-12-19T10:56:48Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:56:48Z" finished-at="2018-12-19T10:56:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckSearchTags STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyTagstestcasesTest.CheckSearchTags()]
]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
      <class name="WittyFeedTestCases.WittyFeedHomePageTestcasesTest">
        <test-method status="PASS" signature="CheckSearchOption()" name="CheckSearchOption" duration-ms="1742" started-at="2018-12-19T10:54:09Z" finished-at="2018-12-19T10:54:11Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:54:11Z" finished-at="2018-12-19T10:54:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckSearchOption STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckSearchOption()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckSiteLogo()" name="CheckSiteLogo" duration-ms="21" started-at="2018-12-19T10:54:11Z" finished-at="2018-12-19T10:54:11Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:54:11Z" finished-at="2018-12-19T10:54:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckSiteLogo STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckSiteLogo()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckNewsCategories()" name="CheckNewsCategories" duration-ms="20" started-at="2018-12-19T10:54:11Z" finished-at="2018-12-19T10:54:11Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:54:11Z" finished-at="2018-12-19T10:54:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckNewsCategories STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckNewsCategories()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckLifeStyleCategories()" name="CheckLifeStyleCategories" duration-ms="5027" started-at="2018-12-19T10:54:11Z" finished-at="2018-12-19T10:54:16Z">
        </test-method>
        <test-method status="PASS" signature="CheckEntertainmentCategories()" name="CheckEntertainmentCategories" duration-ms="26" started-at="2018-12-19T10:54:16Z" finished-at="2018-12-19T10:54:16Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:54:16Z" finished-at="2018-12-19T10:54:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckLifeStyleCategories STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckLifeStyleCategories()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:54:16Z" finished-at="2018-12-19T10:54:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckEntertainmentCategories STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckEntertainmentCategories()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckOpinion()" name="CheckOpinion" duration-ms="20" started-at="2018-12-19T10:54:16Z" finished-at="2018-12-19T10:54:16Z">
        </test-method>
        <test-method status="PASS" signature="CheckIndiaKaPulse()" name="CheckIndiaKaPulse" duration-ms="26" started-at="2018-12-19T10:54:16Z" finished-at="2018-12-19T10:54:16Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:54:16Z" finished-at="2018-12-19T10:54:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckOpinion STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckOpinion()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckGirling()" name="CheckGirling" duration-ms="22" started-at="2018-12-19T10:54:16Z" finished-at="2018-12-19T10:54:16Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:54:16Z" finished-at="2018-12-19T10:54:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckIndiaKaPulse STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckIndiaKaPulse()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:54:16Z" finished-at="2018-12-19T10:54:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckGirling STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckGirling()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckVideos()" name="CheckVideos" duration-ms="19" started-at="2018-12-19T10:54:16Z" finished-at="2018-12-19T10:54:16Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:54:16Z" finished-at="2018-12-19T10:54:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckVideos STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckVideos()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckQuiz()" name="CheckQuiz" duration-ms="25" started-at="2018-12-19T10:54:16Z" finished-at="2018-12-19T10:54:16Z">
        </test-method>
        <test-method status="PASS" signature="CheckInstaLink()" name="CheckInstaLink" duration-ms="20" started-at="2018-12-19T10:54:16Z" finished-at="2018-12-19T10:54:16Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:54:16Z" finished-at="2018-12-19T10:54:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckQuiz STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckQuiz()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:54:16Z" finished-at="2018-12-19T10:54:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckInstaLink STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckInstaLink()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckTwitterLink()" name="CheckTwitterLink" duration-ms="22" started-at="2018-12-19T10:54:16Z" finished-at="2018-12-19T10:54:16Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:54:16Z" finished-at="2018-12-19T10:54:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckTwitterLink STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckTwitterLink()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="FAIL" signature="CheckFacebookLink()" name="CheckFacebookLink" duration-ms="10027" started-at="2018-12-19T10:54:16Z" finished-at="2018-12-19T10:54:26Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<1> but was:<0>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<1> but was:<0>
	at org.testng.Assert.fail(Assert.java:89)
	at org.testng.Assert.failNotEquals(Assert.java:489)
	at org.testng.Assert.assertEquals(Assert.java:118)
	at org.testng.Assert.assertEquals(Assert.java:365)
	at org.testng.Assert.assertEquals(Assert.java:375)
	at PagesOnWittyFeedTv.WittyFeedHomePage.FacebookLink(WittyFeedHomePage.java:130)
	at WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckFacebookLink(WittyFeedHomePageTestcasesTest.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:673)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:842)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1166)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1178)
	at org.testng.TestRunner.privateRun(TestRunner.java:757)
	at org.testng.TestRunner.run(TestRunner.java:608)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1158)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1083)
	at org.testng.TestNG.run(TestNG.java:999)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="4" started-at="2018-12-19T10:54:26Z" finished-at="2018-12-19T10:54:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckFacebookLink STATUS:FAILURE METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckFacebookLink()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckYouTubeLink()" name="CheckYouTubeLink" duration-ms="22" started-at="2018-12-19T10:54:26Z" finished-at="2018-12-19T10:54:26Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:54:26Z" finished-at="2018-12-19T10:54:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckYouTubeLink STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckYouTubeLink()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckFeaturedPostImage()" name="CheckFeaturedPostImage" duration-ms="33" started-at="2018-12-19T10:54:26Z" finished-at="2018-12-19T10:54:26Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:54:26Z" finished-at="2018-12-19T10:54:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckFeaturedPostImage STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckFeaturedPostImage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckFeaturedPostTitle()" name="CheckFeaturedPostTitle" duration-ms="28" started-at="2018-12-19T10:54:26Z" finished-at="2018-12-19T10:54:26Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:54:26Z" finished-at="2018-12-19T10:54:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckFeaturedPostTitle STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckFeaturedPostTitle()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckFeaturedPostAuthor()" name="CheckFeaturedPostAuthor" duration-ms="26" started-at="2018-12-19T10:54:26Z" finished-at="2018-12-19T10:54:26Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:54:26Z" finished-at="2018-12-19T10:54:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckFeaturedPostAuthor STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckFeaturedPostAuthor()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckSecondPostImage()" name="CheckSecondPostImage" duration-ms="20" started-at="2018-12-19T10:54:26Z" finished-at="2018-12-19T10:54:26Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:54:26Z" finished-at="2018-12-19T10:54:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckSecondPostImage STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckSecondPostImage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckSecondPostTitle()" name="CheckSecondPostTitle" duration-ms="25" started-at="2018-12-19T10:54:26Z" finished-at="2018-12-19T10:54:26Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:54:26Z" finished-at="2018-12-19T10:54:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckSecondPostTitle STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckSecondPostTitle()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckSecondPostAuthor()" name="CheckSecondPostAuthor" duration-ms="13" started-at="2018-12-19T10:54:26Z" finished-at="2018-12-19T10:54:26Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:54:26Z" finished-at="2018-12-19T10:54:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckSecondPostAuthor STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckSecondPostAuthor()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckThirdPostImage()" name="CheckThirdPostImage" duration-ms="20" started-at="2018-12-19T10:54:26Z" finished-at="2018-12-19T10:54:26Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:54:26Z" finished-at="2018-12-19T10:54:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckThirdPostImage STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckThirdPostImage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckThirdPostTitle()" name="CheckThirdPostTitle" duration-ms="21" started-at="2018-12-19T10:54:26Z" finished-at="2018-12-19T10:54:26Z">
        </test-method>
        <test-method status="PASS" signature="CheckThirdPostAuthor()" name="CheckThirdPostAuthor" duration-ms="21" started-at="2018-12-19T10:54:26Z" finished-at="2018-12-19T10:54:26Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:54:26Z" finished-at="2018-12-19T10:54:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckThirdPostTitle STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckThirdPostTitle()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:54:26Z" finished-at="2018-12-19T10:54:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckThirdPostAuthor STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckThirdPostAuthor()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckLatestStoryImage()" name="CheckLatestStoryImage" duration-ms="1063" started-at="2018-12-19T10:54:26Z" finished-at="2018-12-19T10:54:27Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:54:27Z" finished-at="2018-12-19T10:54:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckLatestStoryImage STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckLatestStoryImage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckLatestStoryTitle()" name="CheckLatestStoryTitle" duration-ms="1070" started-at="2018-12-19T10:54:27Z" finished-at="2018-12-19T10:54:28Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:54:28Z" finished-at="2018-12-19T10:54:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckLatestStoryTitle STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckLatestStoryTitle()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckLatestStoryAuthor()" name="CheckLatestStoryAuthor" duration-ms="1059" started-at="2018-12-19T10:54:28Z" finished-at="2018-12-19T10:54:30Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:54:30Z" finished-at="2018-12-19T10:54:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckLatestStoryAuthor STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckLatestStoryAuthor()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckWittyVideo1()" name="CheckWittyVideo1" duration-ms="1071" started-at="2018-12-19T10:54:30Z" finished-at="2018-12-19T10:54:31Z">
        </test-method>
        <test-method status="PASS" signature="CheckWittyVideo2()" name="CheckWittyVideo2" duration-ms="1049" started-at="2018-12-19T10:54:31Z" finished-at="2018-12-19T10:54:32Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:54:31Z" finished-at="2018-12-19T10:54:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckWittyVideo1 STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckWittyVideo1()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:54:32Z" finished-at="2018-12-19T10:54:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckWittyVideo2 STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckWittyVideo2()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckQuizeFeedImage()" name="CheckQuizeFeedImage" duration-ms="1073" started-at="2018-12-19T10:54:32Z" finished-at="2018-12-19T10:54:33Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:54:33Z" finished-at="2018-12-19T10:54:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckQuizeFeedImage STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckQuizeFeedImage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckQuizefeedTitle()" name="CheckQuizefeedTitle" duration-ms="1072" started-at="2018-12-19T10:54:33Z" finished-at="2018-12-19T10:54:34Z">
        </test-method>
        <test-method status="PASS" signature="CheckQuizeFeedAuthor()" name="CheckQuizeFeedAuthor" duration-ms="1065" started-at="2018-12-19T10:54:34Z" finished-at="2018-12-19T10:54:35Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:54:34Z" finished-at="2018-12-19T10:54:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckQuizefeedTitle STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckQuizefeedTitle()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckEatSleepReadReaptImage()" name="CheckEatSleepReadReaptImage" duration-ms="1056" started-at="2018-12-19T10:54:35Z" finished-at="2018-12-19T10:54:36Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:54:35Z" finished-at="2018-12-19T10:54:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckQuizeFeedAuthor STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckQuizeFeedAuthor()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:54:36Z" finished-at="2018-12-19T10:54:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckEatSleepReadReaptImage STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckEatSleepReadReaptImage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckEatSleepReadReaptTitle()" name="CheckEatSleepReadReaptTitle" duration-ms="1049" started-at="2018-12-19T10:54:36Z" finished-at="2018-12-19T10:54:37Z">
        </test-method>
        <test-method status="PASS" signature="CheckEatSleepReadReaptAuthor()" name="CheckEatSleepReadReaptAuthor" duration-ms="1055" started-at="2018-12-19T10:54:37Z" finished-at="2018-12-19T10:54:38Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:54:37Z" finished-at="2018-12-19T10:54:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckEatSleepReadReaptTitle STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckEatSleepReadReaptTitle()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:54:38Z" finished-at="2018-12-19T10:54:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckEatSleepReadReaptAuthor STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedHomePageTestcasesTest.CheckEatSleepReadReaptAuthor()]
]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
      <class name="WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest">
        <test-method status="PASS" signature="ClickHamburgerMenu()" name="ClickHamburgerMenu" duration-ms="11158" started-at="2018-12-19T10:52:10Z" finished-at="2018-12-19T10:52:21Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:52:21Z" finished-at="2018-12-19T10:52:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: ClickHamburgerMenu STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest.ClickHamburgerMenu()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckNewsCata()" name="CheckNewsCata" duration-ms="1129" started-at="2018-12-19T10:52:21Z" finished-at="2018-12-19T10:52:22Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:52:22Z" finished-at="2018-12-19T10:52:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckNewsCata STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest.CheckNewsCata()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckNewsSubCata()" name="CheckNewsSubCata" duration-ms="1057" started-at="2018-12-19T10:52:22Z" finished-at="2018-12-19T10:52:23Z">
        </test-method>
        <test-method status="PASS" signature="CheckLifeStyleCata()" name="CheckLifeStyleCata" duration-ms="1065" started-at="2018-12-19T10:52:23Z" finished-at="2018-12-19T10:52:24Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:52:23Z" finished-at="2018-12-19T10:52:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckNewsSubCata STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest.CheckNewsSubCata()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:52:24Z" finished-at="2018-12-19T10:52:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckLifeStyleCata STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest.CheckLifeStyleCata()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckLifeStyleSubCata()" name="CheckLifeStyleSubCata" duration-ms="1075" started-at="2018-12-19T10:52:24Z" finished-at="2018-12-19T10:52:25Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:52:25Z" finished-at="2018-12-19T10:52:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckLifeStyleSubCata STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest.CheckLifeStyleSubCata()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckEntertainmentCata()" name="CheckEntertainmentCata" duration-ms="1055" started-at="2018-12-19T10:52:25Z" finished-at="2018-12-19T10:52:26Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:52:26Z" finished-at="2018-12-19T10:52:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckEntertainmentCata STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest.CheckEntertainmentCata()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckEntertainmentSubCata()" name="CheckEntertainmentSubCata" duration-ms="1042" started-at="2018-12-19T10:52:26Z" finished-at="2018-12-19T10:52:28Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:52:28Z" finished-at="2018-12-19T10:52:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckEntertainmentSubCata STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest.CheckEntertainmentSubCata()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckOpinionLink()" name="CheckOpinionLink" duration-ms="1063" started-at="2018-12-19T10:52:28Z" finished-at="2018-12-19T10:52:29Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:52:29Z" finished-at="2018-12-19T10:52:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckOpinionLink STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest.CheckOpinionLink()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckIndiaKaPulseLink()" name="CheckIndiaKaPulseLink" duration-ms="1057" started-at="2018-12-19T10:52:29Z" finished-at="2018-12-19T10:52:30Z">
        </test-method>
        <test-method status="PASS" signature="CheckSocialImpactLink()" name="CheckSocialImpactLink" duration-ms="1058" started-at="2018-12-19T10:52:30Z" finished-at="2018-12-19T10:52:31Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:52:30Z" finished-at="2018-12-19T10:52:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckIndiaKaPulseLink STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest.CheckIndiaKaPulseLink()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:52:31Z" finished-at="2018-12-19T10:52:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckSocialImpactLink STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest.CheckSocialImpactLink()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckGirlingLink()" name="CheckGirlingLink" duration-ms="1052" started-at="2018-12-19T10:52:31Z" finished-at="2018-12-19T10:52:32Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:52:32Z" finished-at="2018-12-19T10:52:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckGirlingLink STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest.CheckGirlingLink()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckVideosLink()" name="CheckVideosLink" duration-ms="1058" started-at="2018-12-19T10:52:32Z" finished-at="2018-12-19T10:52:33Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:52:33Z" finished-at="2018-12-19T10:52:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckVideosLink STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest.CheckVideosLink()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckQuizLink()" name="CheckQuizLink" duration-ms="1062" started-at="2018-12-19T10:52:33Z" finished-at="2018-12-19T10:52:34Z">
        </test-method>
        <test-method status="PASS" signature="CheckNewsPage()" name="CheckNewsPage" duration-ms="6031" started-at="2018-12-19T10:52:34Z" finished-at="2018-12-19T10:52:40Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:52:34Z" finished-at="2018-12-19T10:52:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckQuizLink STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest.CheckQuizLink()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:52:40Z" finished-at="2018-12-19T10:52:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckNewsPage STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest.CheckNewsPage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckPoliticsPage()" name="CheckPoliticsPage" duration-ms="5327" started-at="2018-12-19T10:52:40Z" finished-at="2018-12-19T10:52:45Z">
        </test-method>
        <test-method status="PASS" signature="CheckSocialPage()" name="CheckSocialPage" duration-ms="4841" started-at="2018-12-19T10:52:45Z" finished-at="2018-12-19T10:52:50Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:52:45Z" finished-at="2018-12-19T10:52:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckPoliticsPage STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest.CheckPoliticsPage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:52:50Z" finished-at="2018-12-19T10:52:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckSocialPage STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest.CheckSocialPage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckTrendingPage()" name="CheckTrendingPage" duration-ms="5020" started-at="2018-12-19T10:52:50Z" finished-at="2018-12-19T10:52:55Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:52:55Z" finished-at="2018-12-19T10:52:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckTrendingPage STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest.CheckTrendingPage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckLifeStylePage()" name="CheckLifeStylePage" duration-ms="4799" started-at="2018-12-19T10:52:55Z" finished-at="2018-12-19T10:53:00Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:53:00Z" finished-at="2018-12-19T10:53:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckLifeStylePage STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest.CheckLifeStylePage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckHealthPage()" name="CheckHealthPage" duration-ms="5297" started-at="2018-12-19T10:53:00Z" finished-at="2018-12-19T10:53:05Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:53:05Z" finished-at="2018-12-19T10:53:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckHealthPage STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest.CheckHealthPage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckRelationshipPage()" name="CheckRelationshipPage" duration-ms="5187" started-at="2018-12-19T10:53:05Z" finished-at="2018-12-19T10:53:10Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:53:10Z" finished-at="2018-12-19T10:53:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckRelationshipPage STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest.CheckRelationshipPage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckTravelPage()" name="CheckTravelPage" duration-ms="5132" started-at="2018-12-19T10:53:10Z" finished-at="2018-12-19T10:53:15Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:53:15Z" finished-at="2018-12-19T10:53:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckTravelPage STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest.CheckTravelPage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckFashionPage()" name="CheckFashionPage" duration-ms="4621" started-at="2018-12-19T10:53:15Z" finished-at="2018-12-19T10:53:20Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:53:20Z" finished-at="2018-12-19T10:53:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckFashionPage STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest.CheckFashionPage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckEntertainmentPage()" name="CheckEntertainmentPage" duration-ms="4443" started-at="2018-12-19T10:53:20Z" finished-at="2018-12-19T10:53:25Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:53:25Z" finished-at="2018-12-19T10:53:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckEntertainmentPage STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest.CheckEntertainmentPage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckBollywoodPage()" name="CheckBollywoodPage" duration-ms="5234" started-at="2018-12-19T10:53:25Z" finished-at="2018-12-19T10:53:30Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:53:30Z" finished-at="2018-12-19T10:53:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckBollywoodPage STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest.CheckBollywoodPage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckSocialCelebritiesPage()" name="CheckSocialCelebritiesPage" duration-ms="6303" started-at="2018-12-19T10:53:30Z" finished-at="2018-12-19T10:53:36Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:53:36Z" finished-at="2018-12-19T10:53:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckSocialCelebritiesPage STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest.CheckSocialCelebritiesPage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckSportsPage()" name="CheckSportsPage" duration-ms="5218" started-at="2018-12-19T10:53:36Z" finished-at="2018-12-19T10:53:41Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:53:41Z" finished-at="2018-12-19T10:53:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckSportsPage STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest.CheckSportsPage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckHollywoodPage()" name="CheckHollywoodPage" duration-ms="4990" started-at="2018-12-19T10:53:41Z" finished-at="2018-12-19T10:53:46Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:53:46Z" finished-at="2018-12-19T10:53:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckHollywoodPage STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest.CheckHollywoodPage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckOpinionPage()" name="CheckOpinionPage" duration-ms="1074" started-at="2018-12-19T10:53:46Z" finished-at="2018-12-19T10:53:47Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:53:47Z" finished-at="2018-12-19T10:53:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckOpinionPage STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest.CheckOpinionPage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckIndiaKaPulsePage()" name="CheckIndiaKaPulsePage" duration-ms="1056" started-at="2018-12-19T10:53:47Z" finished-at="2018-12-19T10:53:48Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:53:48Z" finished-at="2018-12-19T10:53:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckIndiaKaPulsePage STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest.CheckIndiaKaPulsePage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckSocialImpactPage()" name="CheckSocialImpactPage" duration-ms="1055" started-at="2018-12-19T10:53:48Z" finished-at="2018-12-19T10:53:49Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:53:49Z" finished-at="2018-12-19T10:53:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckSocialImpactPage STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest.CheckSocialImpactPage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckGirlingPage()" name="CheckGirlingPage" duration-ms="1048" started-at="2018-12-19T10:53:49Z" finished-at="2018-12-19T10:53:51Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:53:51Z" finished-at="2018-12-19T10:53:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckGirlingPage STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest.CheckGirlingPage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckVideosPage()" name="CheckVideosPage" duration-ms="1053" started-at="2018-12-19T10:53:51Z" finished-at="2018-12-19T10:53:52Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:53:52Z" finished-at="2018-12-19T10:53:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckVideosPage STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest.CheckVideosPage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckQuizPage()" name="CheckQuizPage" duration-ms="1048" started-at="2018-12-19T10:53:52Z" finished-at="2018-12-19T10:53:53Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:53:53Z" finished-at="2018-12-19T10:53:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckQuizPage STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedCatagoiesTestCasesTest.CheckQuizPage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
      <class name="WittyFeedTestCases.WittyFeedFooterOptionTestCasesTest">
        <test-method status="PASS" signature="ClickHamburgerMenu()" name="ClickHamburgerMenu" duration-ms="1938" started-at="2018-12-19T10:53:53Z" finished-at="2018-12-19T10:53:55Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:53:55Z" finished-at="2018-12-19T10:53:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: ClickHamburgerMenu STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedFooterOptionTestCasesTest.ClickHamburgerMenu()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckAbutUsLink()" name="CheckAbutUsLink" duration-ms="41" started-at="2018-12-19T10:53:55Z" finished-at="2018-12-19T10:53:55Z">
        </test-method>
        <test-method status="PASS" signature="CheckTermsOfUseLink()" name="CheckTermsOfUseLink" duration-ms="24" started-at="2018-12-19T10:53:55Z" finished-at="2018-12-19T10:53:55Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:53:55Z" finished-at="2018-12-19T10:53:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckAbutUsLink STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedFooterOptionTestCasesTest.CheckAbutUsLink()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckPrivacyPolicyLink()" name="CheckPrivacyPolicyLink" duration-ms="26" started-at="2018-12-19T10:53:55Z" finished-at="2018-12-19T10:53:55Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:53:55Z" finished-at="2018-12-19T10:53:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckTermsOfUseLink STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedFooterOptionTestCasesTest.CheckTermsOfUseLink()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:53:55Z" finished-at="2018-12-19T10:53:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckPrivacyPolicyLink STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedFooterOptionTestCasesTest.CheckPrivacyPolicyLink()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckCantactUsLink()" name="CheckCantactUsLink" duration-ms="25" started-at="2018-12-19T10:53:55Z" finished-at="2018-12-19T10:53:55Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:53:55Z" finished-at="2018-12-19T10:53:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckCantactUsLink STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedFooterOptionTestCasesTest.CheckCantactUsLink()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckAbutUsPage()" name="CheckAbutUsPage" duration-ms="4795" started-at="2018-12-19T10:53:55Z" finished-at="2018-12-19T10:54:00Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:54:00Z" finished-at="2018-12-19T10:54:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckAbutUsPage STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedFooterOptionTestCasesTest.CheckAbutUsPage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckTermsOfUsePage()" name="CheckTermsOfUsePage" duration-ms="4934" started-at="2018-12-19T10:54:00Z" finished-at="2018-12-19T10:54:04Z">
        </test-method>
        <test-method status="PASS" signature="CheckPrivacyPolicyPage()" name="CheckPrivacyPolicyPage" duration-ms="4579" started-at="2018-12-19T10:54:04Z" finished-at="2018-12-19T10:54:09Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:54:04Z" finished-at="2018-12-19T10:54:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckTermsOfUsePage STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedFooterOptionTestCasesTest.CheckTermsOfUsePage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckCantactUsPage()" name="CheckCantactUsPage" duration-ms="27" started-at="2018-12-19T10:54:09Z" finished-at="2018-12-19T10:54:09Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:54:09Z" finished-at="2018-12-19T10:54:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckPrivacyPolicyPage STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedFooterOptionTestCasesTest.CheckPrivacyPolicyPage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:54:09Z" finished-at="2018-12-19T10:54:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckCantactUsPage STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedFooterOptionTestCasesTest.CheckCantactUsPage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
      <class name="WittyFeedTestCases.WittyFeedStoryPageTestCasesTest">
        <test-method status="PASS" signature="OpenStoryPage()" name="OpenStoryPage" duration-ms="18238" started-at="2018-12-19T10:54:46Z" finished-at="2018-12-19T10:55:04Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:55:04Z" finished-at="2018-12-19T10:55:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: OpenStoryPage STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedStoryPageTestCasesTest.OpenStoryPage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckAdvertisementFrame()" name="CheckAdvertisementFrame" duration-ms="28" started-at="2018-12-19T10:55:04Z" finished-at="2018-12-19T10:55:04Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:55:04Z" finished-at="2018-12-19T10:55:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckAdvertisementFrame STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedStoryPageTestCasesTest.CheckAdvertisementFrame()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckStoryAuthor()" name="CheckStoryAuthor" duration-ms="1739" started-at="2018-12-19T10:55:04Z" finished-at="2018-12-19T10:55:06Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:55:06Z" finished-at="2018-12-19T10:55:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckStoryAuthor STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedStoryPageTestCasesTest.CheckStoryAuthor()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckStoryTitle()" name="CheckStoryTitle" duration-ms="1138" started-at="2018-12-19T10:55:06Z" finished-at="2018-12-19T10:55:07Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:55:07Z" finished-at="2018-12-19T10:55:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckStoryTitle STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedStoryPageTestCasesTest.CheckStoryTitle()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckStoryDesc()" name="CheckStoryDesc" duration-ms="1102" started-at="2018-12-19T10:55:07Z" finished-at="2018-12-19T10:55:08Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:55:08Z" finished-at="2018-12-19T10:55:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckStoryDesc STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedStoryPageTestCasesTest.CheckStoryDesc()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckStoryShares()" name="CheckStoryShares" duration-ms="1085" started-at="2018-12-19T10:55:08Z" finished-at="2018-12-19T10:55:09Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:55:09Z" finished-at="2018-12-19T10:55:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckStoryShares STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedStoryPageTestCasesTest.CheckStoryShares()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckStoryShareOptions()" name="CheckStoryShareOptions" duration-ms="1185" started-at="2018-12-19T10:55:09Z" finished-at="2018-12-19T10:55:10Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:55:10Z" finished-at="2018-12-19T10:55:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckStoryShareOptions STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedStoryPageTestCasesTest.CheckStoryShareOptions()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="FAIL" signature="CheckStoryContent()" name="CheckStoryContent" duration-ms="10189" started-at="2018-12-19T10:55:10Z" finished-at="2018-12-19T10:55:21Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"div.col:nth-child(6) > p:nth-child(1)"}
  (Session info: chrome=71.0.3578.80)
  (Driver info: chromedriver=2.43.600233 (523efee95e3d68b8719b3a1c83051aa63aa6b10d),platform=Linux 4.4.0-131-generic x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.5.3', revision: 'a88d25fe6b', time: '2017-08-29T12:42:44.417Z'
System info: host: 'wittyfeed-Vostro-3558', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-131-generic', java.version: '1.8.0_191'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{mobileEmulationEnabled=false, hasTouchScreen=false, platform=LINUX, acceptSslCerts=false, goog:chromeOptions={debuggerAddress=localhost:41329}, acceptInsecureCerts=false, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, platformName=LINUX, setWindowRect=true, unexpectedAlertBehaviour=, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.43.600233 (523efee95e3d68b8719b3a1c83051aa63aa6b10d), userDataDir=/tmp/.org.chromium.Chromium.PZHGhn}, takesHeapSnapshot=true, unhandledPromptBehavior=, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, version=71.0.3578.80, browserConnectionEnabled=false, nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}]
Session ID: 0189373354be85fce8eacd1c20793d16
*** Element info: {Using=css selector, value=div.col:nth-child(6) > p:nth-child(1)}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"div.col:nth-child(6) > p:nth-child(1)"}
  (Session info: chrome=71.0.3578.80)
  (Driver info: chromedriver=2.43.600233 (523efee95e3d68b8719b3a1c83051aa63aa6b10d),platform=Linux 4.4.0-131-generic x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.5.3', revision: 'a88d25fe6b', time: '2017-08-29T12:42:44.417Z'
System info: host: 'wittyfeed-Vostro-3558', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-131-generic', java.version: '1.8.0_191'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{mobileEmulationEnabled=false, hasTouchScreen=false, platform=LINUX, acceptSslCerts=false, goog:chromeOptions={debuggerAddress=localhost:41329}, acceptInsecureCerts=false, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, platformName=LINUX, setWindowRect=true, unexpectedAlertBehaviour=, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.43.600233 (523efee95e3d68b8719b3a1c83051aa63aa6b10d), userDataDir=/tmp/.org.chromium.Chromium.PZHGhn}, takesHeapSnapshot=true, unhandledPromptBehavior=, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, version=71.0.3578.80, browserConnectionEnabled=false, nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}]
Session ID: 0189373354be85fce8eacd1c20793d16
*** Element info: {Using=css selector, value=div.col:nth-child(6) > p:nth-child(1)}
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:215)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:167)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:82)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:45)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:82)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:646)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:416)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:510)
	at org.openqa.selenium.By$ByCssSelector.findElement(By.java:430)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:408)
	at PagesOnWittyFeedTv.WittyFeedStoryPage.StoryContent(WittyFeedStoryPage.java:106)
	at WittyFeedTestCases.WittyFeedStoryPageTestCasesTest.CheckStoryContent(WittyFeedStoryPageTestCasesTest.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:673)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:842)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1166)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1178)
	at org.testng.TestRunner.privateRun(TestRunner.java:757)
	at org.testng.TestRunner.run(TestRunner.java:608)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1158)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1083)
	at org.testng.TestNG.run(TestNG.java:999)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="2" started-at="2018-12-19T10:55:21Z" finished-at="2018-12-19T10:55:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckStoryContent STATUS:FAILURE METHOD:WittyFeedTestCases.WittyFeedStoryPageTestCasesTest.CheckStoryContent()]
]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
      <class name="WittyFeedTestCases.CaptureAndParsingHarFileForPixPngTest">
        <test-method status="PASS" signature="CreatHarFile()" name="CreatHarFile" is-config="true" duration-ms="185175" started-at="2018-12-19T10:48:49Z" finished-at="2018-12-19T10:51:54Z">
        </test-method>
        <test-method status="PASS" signature="OpenGoogleappsHar_analyzer()" name="OpenGoogleappsHar_analyzer" duration-ms="13388" started-at="2018-12-19T10:51:54Z" finished-at="2018-12-19T10:52:08Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="24" started-at="2018-12-19T10:52:08Z" finished-at="2018-12-19T10:52:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: OpenGoogleappsHar_analyzer STATUS:SUCCESS METHOD:WittyFeedTestCases.CaptureAndParsingHarFileForPixPngTest.OpenGoogleappsHar_analyzer()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckGMTValue()" name="CheckGMTValue" duration-ms="133" started-at="2018-12-19T10:52:08Z" finished-at="2018-12-19T10:52:08Z">
        </test-method>
        <test-method status="PASS" signature="Checkvisit_blockValue()" name="Checkvisit_blockValue" duration-ms="65" started-at="2018-12-19T10:52:08Z" finished-at="2018-12-19T10:52:08Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:52:08Z" finished-at="2018-12-19T10:52:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckGMTValue STATUS:SUCCESS METHOD:WittyFeedTestCases.CaptureAndParsingHarFileForPixPngTest.CheckGMTValue()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:52:08Z" finished-at="2018-12-19T10:52:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: Checkvisit_blockValue STATUS:SUCCESS METHOD:WittyFeedTestCases.CaptureAndParsingHarFileForPixPngTest.Checkvisit_blockValue()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="Checkcountry_codeValue()" name="Checkcountry_codeValue" duration-ms="69" started-at="2018-12-19T10:52:08Z" finished-at="2018-12-19T10:52:08Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:52:08Z" finished-at="2018-12-19T10:52:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: Checkcountry_codeValue STATUS:SUCCESS METHOD:WittyFeedTestCases.CaptureAndParsingHarFileForPixPngTest.Checkcountry_codeValue()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="Checklanguage_EnglishValue()" name="Checklanguage_EnglishValue" duration-ms="65" started-at="2018-12-19T10:52:08Z" finished-at="2018-12-19T10:52:08Z">
        </test-method>
        <test-method status="PASS" signature="Checkcategory_peopleValue()" name="Checkcategory_peopleValue" duration-ms="64" started-at="2018-12-19T10:52:08Z" finished-at="2018-12-19T10:52:08Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:52:08Z" finished-at="2018-12-19T10:52:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: Checklanguage_EnglishValue STATUS:SUCCESS METHOD:WittyFeedTestCases.CaptureAndParsingHarFileForPixPngTest.Checklanguage_EnglishValue()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:52:08Z" finished-at="2018-12-19T10:52:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: Checkcategory_peopleValue STATUS:SUCCESS METHOD:WittyFeedTestCases.CaptureAndParsingHarFileForPixPngTest.Checkcategory_peopleValue()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="Checkwriter_nameValue()" name="Checkwriter_nameValue" duration-ms="55" started-at="2018-12-19T10:52:08Z" finished-at="2018-12-19T10:52:08Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:52:08Z" finished-at="2018-12-19T10:52:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: Checkwriter_nameValue STATUS:SUCCESS METHOD:WittyFeedTestCases.CaptureAndParsingHarFileForPixPngTest.Checkwriter_nameValue()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="Checkwriter_idValue()" name="Checkwriter_idValue" duration-ms="56" started-at="2018-12-19T10:52:08Z" finished-at="2018-12-19T10:52:08Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:52:08Z" finished-at="2018-12-19T10:52:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: Checkwriter_idValue STATUS:SUCCESS METHOD:WittyFeedTestCases.CaptureAndParsingHarFileForPixPngTest.Checkwriter_idValue()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="Checkcategory_idValue()" name="Checkcategory_idValue" duration-ms="55" started-at="2018-12-19T10:52:08Z" finished-at="2018-12-19T10:52:08Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:52:08Z" finished-at="2018-12-19T10:52:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: Checkcategory_idValue STATUS:SUCCESS METHOD:WittyFeedTestCases.CaptureAndParsingHarFileForPixPngTest.Checkcategory_idValue()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="Checkstory_idValue()" name="Checkstory_idValue" duration-ms="51" started-at="2018-12-19T10:52:08Z" finished-at="2018-12-19T10:52:09Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:52:09Z" finished-at="2018-12-19T10:52:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: Checkstory_idValue STATUS:SUCCESS METHOD:WittyFeedTestCases.CaptureAndParsingHarFileForPixPngTest.Checkstory_idValue()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="Checkgoogle_entitiesValue()" name="Checkgoogle_entitiesValue" duration-ms="67" started-at="2018-12-19T10:52:09Z" finished-at="2018-12-19T10:52:09Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:52:09Z" finished-at="2018-12-19T10:52:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: Checkgoogle_entitiesValue STATUS:SUCCESS METHOD:WittyFeedTestCases.CaptureAndParsingHarFileForPixPngTest.Checkgoogle_entitiesValue()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="Checkpage_typeValue()" name="Checkpage_typeValue" duration-ms="74" started-at="2018-12-19T10:52:09Z" finished-at="2018-12-19T10:52:09Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:52:09Z" finished-at="2018-12-19T10:52:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: Checkpage_typeValue STATUS:SUCCESS METHOD:WittyFeedTestCases.CaptureAndParsingHarFileForPixPngTest.Checkpage_typeValue()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckcityValue()" name="CheckcityValue" duration-ms="55" started-at="2018-12-19T10:52:09Z" finished-at="2018-12-19T10:52:09Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:52:09Z" finished-at="2018-12-19T10:52:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckcityValue STATUS:SUCCESS METHOD:WittyFeedTestCases.CaptureAndParsingHarFileForPixPngTest.CheckcityValue()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="Checkcountry_nameValue()" name="Checkcountry_nameValue" duration-ms="75" started-at="2018-12-19T10:52:09Z" finished-at="2018-12-19T10:52:09Z">
        </test-method>
        <test-method status="PASS" signature="CheckfpValue()" name="CheckfpValue" duration-ms="65" started-at="2018-12-19T10:52:09Z" finished-at="2018-12-19T10:52:09Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:52:09Z" finished-at="2018-12-19T10:52:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: Checkcountry_nameValue STATUS:SUCCESS METHOD:WittyFeedTestCases.CaptureAndParsingHarFileForPixPngTest.Checkcountry_nameValue()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:52:09Z" finished-at="2018-12-19T10:52:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckfpValue STATUS:SUCCESS METHOD:WittyFeedTestCases.CaptureAndParsingHarFileForPixPngTest.CheckfpValue()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="Checkpage_urlValue()" name="Checkpage_urlValue" duration-ms="62" started-at="2018-12-19T10:52:09Z" finished-at="2018-12-19T10:52:09Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:52:09Z" finished-at="2018-12-19T10:52:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: Checkpage_urlValue STATUS:SUCCESS METHOD:WittyFeedTestCases.CaptureAndParsingHarFileForPixPngTest.Checkpage_urlValue()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="Checkclient_ipValue()" name="Checkclient_ipValue" duration-ms="64" started-at="2018-12-19T10:52:09Z" finished-at="2018-12-19T10:52:09Z">
        </test-method>
        <test-method status="PASS" signature="Checkreferral_domainValue()" name="Checkreferral_domainValue" duration-ms="53" started-at="2018-12-19T10:52:09Z" finished-at="2018-12-19T10:52:09Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:52:09Z" finished-at="2018-12-19T10:52:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: Checkclient_ipValue STATUS:SUCCESS METHOD:WittyFeedTestCases.CaptureAndParsingHarFileForPixPngTest.Checkclient_ipValue()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:52:09Z" finished-at="2018-12-19T10:52:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: Checkreferral_domainValue STATUS:SUCCESS METHOD:WittyFeedTestCases.CaptureAndParsingHarFileForPixPngTest.Checkreferral_domainValue()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="Checkdev_sourceValue()" name="Checkdev_sourceValue" duration-ms="53" started-at="2018-12-19T10:52:09Z" finished-at="2018-12-19T10:52:09Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:52:09Z" finished-at="2018-12-19T10:52:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: Checkdev_sourceValue STATUS:SUCCESS METHOD:WittyFeedTestCases.CaptureAndParsingHarFileForPixPngTest.Checkdev_sourceValue()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckPBValue()" name="CheckPBValue" duration-ms="53" started-at="2018-12-19T10:52:09Z" finished-at="2018-12-19T10:52:09Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:52:09Z" finished-at="2018-12-19T10:52:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckPBValue STATUS:SUCCESS METHOD:WittyFeedTestCases.CaptureAndParsingHarFileForPixPngTest.CheckPBValue()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="Checkstory_tagsValue()" name="Checkstory_tagsValue" duration-ms="51" started-at="2018-12-19T10:52:09Z" finished-at="2018-12-19T10:52:09Z">
        </test-method>
        <test-method status="PASS" signature="Checkcurrent_blockValue()" name="Checkcurrent_blockValue" duration-ms="50" started-at="2018-12-19T10:52:09Z" finished-at="2018-12-19T10:52:09Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:52:09Z" finished-at="2018-12-19T10:52:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: Checkstory_tagsValue STATUS:SUCCESS METHOD:WittyFeedTestCases.CaptureAndParsingHarFileForPixPngTest.Checkstory_tagsValue()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:52:09Z" finished-at="2018-12-19T10:52:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: Checkcurrent_blockValue STATUS:SUCCESS METHOD:WittyFeedTestCases.CaptureAndParsingHarFileForPixPngTest.Checkcurrent_blockValue()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="Checktotal_blocksValue()" name="Checktotal_blocksValue" duration-ms="75" started-at="2018-12-19T10:52:09Z" finished-at="2018-12-19T10:52:09Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:52:09Z" finished-at="2018-12-19T10:52:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: Checktotal_blocksValue STATUS:SUCCESS METHOD:WittyFeedTestCases.CaptureAndParsingHarFileForPixPngTest.Checktotal_blocksValue()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckdomainValue()" name="CheckdomainValue" duration-ms="89" started-at="2018-12-19T10:52:09Z" finished-at="2018-12-19T10:52:09Z">
        </test-method>
        <test-method status="PASS" signature="CheckadPartnerValue()" name="CheckadPartnerValue" duration-ms="68" started-at="2018-12-19T10:52:09Z" finished-at="2018-12-19T10:52:09Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:52:09Z" finished-at="2018-12-19T10:52:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckdomainValue STATUS:SUCCESS METHOD:WittyFeedTestCases.CaptureAndParsingHarFileForPixPngTest.CheckdomainValue()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:52:09Z" finished-at="2018-12-19T10:52:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckadPartnerValue STATUS:SUCCESS METHOD:WittyFeedTestCases.CaptureAndParsingHarFileForPixPngTest.CheckadPartnerValue()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckadblockerValue()" name="CheckadblockerValue" duration-ms="68" started-at="2018-12-19T10:52:09Z" finished-at="2018-12-19T10:52:10Z">
        </test-method>
        <test-method status="PASS" signature="CheckofcValue()" name="CheckofcValue" duration-ms="64" started-at="2018-12-19T10:52:10Z" finished-at="2018-12-19T10:52:10Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:52:10Z" finished-at="2018-12-19T10:52:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckadblockerValue STATUS:SUCCESS METHOD:WittyFeedTestCases.CaptureAndParsingHarFileForPixPngTest.CheckadblockerValue()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:52:10Z" finished-at="2018-12-19T10:52:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckofcValue STATUS:SUCCESS METHOD:WittyFeedTestCases.CaptureAndParsingHarFileForPixPngTest.CheckofcValue()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="Checktotal_adsValue()" name="Checktotal_adsValue" duration-ms="61" started-at="2018-12-19T10:52:10Z" finished-at="2018-12-19T10:52:10Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:52:10Z" finished-at="2018-12-19T10:52:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: Checktotal_adsValue STATUS:SUCCESS METHOD:WittyFeedTestCases.CaptureAndParsingHarFileForPixPngTest.Checktotal_adsValue()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="Checktree_idValue()" name="Checktree_idValue" duration-ms="57" started-at="2018-12-19T10:52:10Z" finished-at="2018-12-19T10:52:10Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:52:10Z" finished-at="2018-12-19T10:52:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: Checktree_idValue STATUS:SUCCESS METHOD:WittyFeedTestCases.CaptureAndParsingHarFileForPixPngTest.Checktree_idValue()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckussValue()" name="CheckussValue" duration-ms="63" started-at="2018-12-19T10:52:10Z" finished-at="2018-12-19T10:52:10Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:52:10Z" finished-at="2018-12-19T10:52:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckussValue STATUS:SUCCESS METHOD:WittyFeedTestCases.CaptureAndParsingHarFileForPixPngTest.CheckussValue()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckpidValue()" name="CheckpidValue" duration-ms="55" started-at="2018-12-19T10:52:10Z" finished-at="2018-12-19T10:52:10Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:52:10Z" finished-at="2018-12-19T10:52:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckpidValue STATUS:SUCCESS METHOD:WittyFeedTestCases.CaptureAndParsingHarFileForPixPngTest.CheckpidValue()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="Checkinit_story_idValue()" name="Checkinit_story_idValue" duration-ms="57" started-at="2018-12-19T10:52:10Z" finished-at="2018-12-19T10:52:10Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:52:10Z" finished-at="2018-12-19T10:52:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: Checkinit_story_idValue STATUS:SUCCESS METHOD:WittyFeedTestCases.CaptureAndParsingHarFileForPixPngTest.Checkinit_story_idValue()]
]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
      <class name="WittyFeedTestCases.WittyFeedUserProfileTestCasesTest">
        <test-method status="PASS" signature="ClickAuthorName()" name="ClickAuthorName" duration-ms="2742" started-at="2018-12-19T10:55:21Z" finished-at="2018-12-19T10:55:23Z">
        </test-method>
        <test-method status="FAIL" signature="CheckBackgroundImage()" name="CheckBackgroundImage" duration-ms="10047" started-at="2018-12-19T10:55:23Z" finished-at="2018-12-19T10:55:33Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<1> but was:<0>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<1> but was:<0>
	at org.testng.Assert.fail(Assert.java:89)
	at org.testng.Assert.failNotEquals(Assert.java:489)
	at org.testng.Assert.assertEquals(Assert.java:118)
	at org.testng.Assert.assertEquals(Assert.java:365)
	at org.testng.Assert.assertEquals(Assert.java:375)
	at PagesOnWittyFeedTv.WittyFeedUserProfilePage.BackgroundImage(WittyFeedUserProfilePage.java:40)
	at WittyFeedTestCases.WittyFeedUserProfileTestCasesTest.CheckBackgroundImage(WittyFeedUserProfileTestCasesTest.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:673)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:842)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1166)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1178)
	at org.testng.TestRunner.privateRun(TestRunner.java:757)
	at org.testng.TestRunner.run(TestRunner.java:608)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1158)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1083)
	at org.testng.TestNG.run(TestNG.java:999)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:55:23Z" finished-at="2018-12-19T10:55:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: ClickAuthorName STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedUserProfileTestCasesTest.ClickAuthorName()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:55:33Z" finished-at="2018-12-19T10:55:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckBackgroundImage STATUS:FAILURE METHOD:WittyFeedTestCases.WittyFeedUserProfileTestCasesTest.CheckBackgroundImage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="FAIL" signature="CheckAuthorName()" name="CheckAuthorName" duration-ms="10041" started-at="2018-12-19T10:55:33Z" finished-at="2018-12-19T10:55:44Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<1> but was:<0>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<1> but was:<0>
	at org.testng.Assert.fail(Assert.java:89)
	at org.testng.Assert.failNotEquals(Assert.java:489)
	at org.testng.Assert.assertEquals(Assert.java:118)
	at org.testng.Assert.assertEquals(Assert.java:365)
	at org.testng.Assert.assertEquals(Assert.java:375)
	at PagesOnWittyFeedTv.WittyFeedUserProfilePage.AuthorName(WittyFeedUserProfilePage.java:47)
	at WittyFeedTestCases.WittyFeedUserProfileTestCasesTest.CheckAuthorName(WittyFeedUserProfileTestCasesTest.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:673)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:842)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1166)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1178)
	at org.testng.TestRunner.privateRun(TestRunner.java:757)
	at org.testng.TestRunner.run(TestRunner.java:608)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1158)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1083)
	at org.testng.TestNG.run(TestNG.java:999)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:55:44Z" finished-at="2018-12-19T10:55:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckAuthorName STATUS:FAILURE METHOD:WittyFeedTestCases.WittyFeedUserProfileTestCasesTest.CheckAuthorName()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="FAIL" signature="CheckAuthorImage()" name="CheckAuthorImage" duration-ms="10014" started-at="2018-12-19T10:55:44Z" finished-at="2018-12-19T10:55:54Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<1> but was:<0>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<1> but was:<0>
	at org.testng.Assert.fail(Assert.java:89)
	at org.testng.Assert.failNotEquals(Assert.java:489)
	at org.testng.Assert.assertEquals(Assert.java:118)
	at org.testng.Assert.assertEquals(Assert.java:365)
	at org.testng.Assert.assertEquals(Assert.java:375)
	at PagesOnWittyFeedTv.WittyFeedUserProfilePage.AuthorImage(WittyFeedUserProfilePage.java:54)
	at WittyFeedTestCases.WittyFeedUserProfileTestCasesTest.CheckAuthorImage(WittyFeedUserProfileTestCasesTest.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:673)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:842)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1166)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1178)
	at org.testng.TestRunner.privateRun(TestRunner.java:757)
	at org.testng.TestRunner.run(TestRunner.java:608)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1158)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1083)
	at org.testng.TestNG.run(TestNG.java:999)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:55:54Z" finished-at="2018-12-19T10:55:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckAuthorImage STATUS:FAILURE METHOD:WittyFeedTestCases.WittyFeedUserProfileTestCasesTest.CheckAuthorImage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="FAIL" signature="CheckWriterName()" name="CheckWriterName" duration-ms="10055" started-at="2018-12-19T10:55:54Z" finished-at="2018-12-19T10:56:04Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<1> but was:<0>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<1> but was:<0>
	at org.testng.Assert.fail(Assert.java:89)
	at org.testng.Assert.failNotEquals(Assert.java:489)
	at org.testng.Assert.assertEquals(Assert.java:118)
	at org.testng.Assert.assertEquals(Assert.java:365)
	at org.testng.Assert.assertEquals(Assert.java:375)
	at PagesOnWittyFeedTv.WittyFeedUserProfilePage.WriterName(WittyFeedUserProfilePage.java:61)
	at WittyFeedTestCases.WittyFeedUserProfileTestCasesTest.CheckWriterName(WittyFeedUserProfileTestCasesTest.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:673)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:842)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1166)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1178)
	at org.testng.TestRunner.privateRun(TestRunner.java:757)
	at org.testng.TestRunner.run(TestRunner.java:608)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1158)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1083)
	at org.testng.TestNG.run(TestNG.java:999)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:56:04Z" finished-at="2018-12-19T10:56:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckWriterName STATUS:FAILURE METHOD:WittyFeedTestCases.WittyFeedUserProfileTestCasesTest.CheckWriterName()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="FAIL" signature="CheckEditor()" name="CheckEditor" duration-ms="10032" started-at="2018-12-19T10:56:04Z" finished-at="2018-12-19T10:56:14Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<1> but was:<0>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<1> but was:<0>
	at org.testng.Assert.fail(Assert.java:89)
	at org.testng.Assert.failNotEquals(Assert.java:489)
	at org.testng.Assert.assertEquals(Assert.java:118)
	at org.testng.Assert.assertEquals(Assert.java:365)
	at org.testng.Assert.assertEquals(Assert.java:375)
	at PagesOnWittyFeedTv.WittyFeedUserProfilePage.Editor(WittyFeedUserProfilePage.java:68)
	at WittyFeedTestCases.WittyFeedUserProfileTestCasesTest.CheckEditor(WittyFeedUserProfileTestCasesTest.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:673)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:842)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1166)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1178)
	at org.testng.TestRunner.privateRun(TestRunner.java:757)
	at org.testng.TestRunner.run(TestRunner.java:608)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1158)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1083)
	at org.testng.TestNG.run(TestNG.java:999)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:56:14Z" finished-at="2018-12-19T10:56:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckEditor STATUS:FAILURE METHOD:WittyFeedTestCases.WittyFeedUserProfileTestCasesTest.CheckEditor()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="FAIL" signature="CheckProfileDesc()" name="CheckProfileDesc" duration-ms="10021" started-at="2018-12-19T10:56:14Z" finished-at="2018-12-19T10:56:24Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<1> but was:<0>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<1> but was:<0>
	at org.testng.Assert.fail(Assert.java:89)
	at org.testng.Assert.failNotEquals(Assert.java:489)
	at org.testng.Assert.assertEquals(Assert.java:118)
	at org.testng.Assert.assertEquals(Assert.java:365)
	at org.testng.Assert.assertEquals(Assert.java:375)
	at PagesOnWittyFeedTv.WittyFeedUserProfilePage.ProfileDesc(WittyFeedUserProfilePage.java:94)
	at WittyFeedTestCases.WittyFeedUserProfileTestCasesTest.CheckProfileDesc(WittyFeedUserProfileTestCasesTest.java:92)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:673)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:842)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1166)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1178)
	at org.testng.TestRunner.privateRun(TestRunner.java:757)
	at org.testng.TestRunner.run(TestRunner.java:608)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1158)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1083)
	at org.testng.TestNG.run(TestNG.java:999)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:56:24Z" finished-at="2018-12-19T10:56:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckProfileDesc STATUS:FAILURE METHOD:WittyFeedTestCases.WittyFeedUserProfileTestCasesTest.CheckProfileDesc()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="FAIL" signature="CheckDontMissThisStory()" name="CheckDontMissThisStory" duration-ms="10043" started-at="2018-12-19T10:56:24Z" finished-at="2018-12-19T10:56:34Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<1> but was:<0>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<1> but was:<0>
	at org.testng.Assert.fail(Assert.java:89)
	at org.testng.Assert.failNotEquals(Assert.java:489)
	at org.testng.Assert.assertEquals(Assert.java:118)
	at org.testng.Assert.assertEquals(Assert.java:365)
	at org.testng.Assert.assertEquals(Assert.java:375)
	at PagesOnWittyFeedTv.WittyFeedUserProfilePage.DontMissThisStory(WittyFeedUserProfilePage.java:101)
	at WittyFeedTestCases.WittyFeedUserProfileTestCasesTest.CheckDontMissThisStory(WittyFeedUserProfileTestCasesTest.java:99)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:673)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:842)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1166)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1178)
	at org.testng.TestRunner.privateRun(TestRunner.java:757)
	at org.testng.TestRunner.run(TestRunner.java:608)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1158)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1083)
	at org.testng.TestNG.run(TestNG.java:999)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="2" started-at="2018-12-19T10:56:34Z" finished-at="2018-12-19T10:56:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckDontMissThisStory STATUS:FAILURE METHOD:WittyFeedTestCases.WittyFeedUserProfileTestCasesTest.CheckDontMissThisStory()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="FAIL" signature="LatestStories()" name="LatestStories" duration-ms="10081" started-at="2018-12-19T10:56:34Z" finished-at="2018-12-19T10:56:44Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<1> but was:<0>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<1> but was:<0>
	at org.testng.Assert.fail(Assert.java:89)
	at org.testng.Assert.failNotEquals(Assert.java:489)
	at org.testng.Assert.assertEquals(Assert.java:118)
	at org.testng.Assert.assertEquals(Assert.java:365)
	at org.testng.Assert.assertEquals(Assert.java:375)
	at PagesOnWittyFeedTv.WittyFeedUserProfilePage.LatestStories(WittyFeedUserProfilePage.java:107)
	at WittyFeedTestCases.WittyFeedUserProfileTestCasesTest.LatestStories(WittyFeedUserProfileTestCasesTest.java:107)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:673)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:842)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1166)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1178)
	at org.testng.TestRunner.privateRun(TestRunner.java:757)
	at org.testng.TestRunner.run(TestRunner.java:608)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1158)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1083)
	at org.testng.TestNG.run(TestNG.java:999)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="2" started-at="2018-12-19T10:56:44Z" finished-at="2018-12-19T10:56:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: LatestStories STATUS:FAILURE METHOD:WittyFeedTestCases.WittyFeedUserProfileTestCasesTest.LatestStories()]
]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
      <class name="WittyFeedTestCases.WittyFeedSearchPageTestCasesTest">
        <test-method status="PASS" signature="Setup()" name="Setup" is-config="true" duration-ms="3288" started-at="2018-12-19T10:48:46Z" finished-at="2018-12-19T10:48:49Z">
        </test-method>
        <test-method status="PASS" signature="ClickSearchOption()" name="ClickSearchOption" duration-ms="7802" started-at="2018-12-19T10:54:38Z" finished-at="2018-12-19T10:54:46Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:54:46Z" finished-at="2018-12-19T10:54:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: ClickSearchOption STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedSearchPageTestCasesTest.ClickSearchOption()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckSearchHeader()" name="CheckSearchHeader" duration-ms="24" started-at="2018-12-19T10:54:46Z" finished-at="2018-12-19T10:54:46Z">
        </test-method>
        <test-method status="PASS" signature="CheckSearchedStoryImage()" name="CheckSearchedStoryImage" duration-ms="31" started-at="2018-12-19T10:54:46Z" finished-at="2018-12-19T10:54:46Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:54:46Z" finished-at="2018-12-19T10:54:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckSearchHeader STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedSearchPageTestCasesTest.CheckSearchHeader()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="1" started-at="2018-12-19T10:54:46Z" finished-at="2018-12-19T10:54:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckSearchedStoryImage STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedSearchPageTestCasesTest.CheckSearchedStoryImage()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="CheckSearchedStoryTitle()" name="CheckSearchedStoryTitle" duration-ms="32" started-at="2018-12-19T10:54:46Z" finished-at="2018-12-19T10:54:46Z">
        </test-method>
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)" name="getResults" is-config="true" duration-ms="0" started-at="2018-12-19T10:54:46Z" finished-at="2018-12-19T10:54:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult: CheckSearchedStoryTitle STATUS:SUCCESS METHOD:WittyFeedTestCases.WittyFeedSearchPageTestCasesTest.CheckSearchedStoryTitle()]
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="tearDown()" name="tearDown" is-config="true" duration-ms="933" started-at="2018-12-19T10:56:49Z" finished-at="2018-12-19T10:56:49Z">
        </test-method>
      </class>
    </test>
  </suite>
</testng-results>
